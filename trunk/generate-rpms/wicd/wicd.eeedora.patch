diff -uNr wicd_1.4.2-orig/etc/init.d/wicd wicd_1.4.2/etc/init.d/wicd
--- wicd_1.4.2-orig/etc/init.d/wicd	2008-02-11 03:25:21.000000000 -0500
+++ wicd_1.4.2/etc/init.d/wicd	2008-07-06 14:38:43.000000000 -0400
@@ -1,15 +1,66 @@
-#!/bin/bash
+#!/bin/sh
+#
+# wicd:		Wireless Internet Connection Daemon
+#
+# chkconfig:	345 26 89
+# description:	Manage wireless connections, and wired connections as a bonus.
+#
+### BEGIN INIT INFO
+# Provides: wicd
+# Required-Start: $local_fs messagebus
+# Required-Stop: $local_fs messagebus
+# Default-Start:  3 4 5
+# Default-Stop: 0 1 2 6
+# Description: Wireless Internet Connection Daemon
+### END INIT INFO
 
-if [[ $1 = "start" ]]
-then
-	echo "Stopping any running daemons..."
-	killall daemon.py 2> /dev/null
-	echo "Starting wicd daemon..."
-	/opt/wicd/daemon.py 2> /dev/null
-fi
-
-if [[ $1 = "stop" ]]
-then
-	echo "Stopping wicd daemon..."
-	killall daemon.py 2> /dev/null
-fi
+# Source function library.
+. /etc/rc.d/init.d/functions
+
+#[ -r /etc/sysconfig/wicd ] && . /etc/sysconfig/wicd
+
+start() 
+{
+
+        echo -n $"Starting wicd: "
+        daemon /opt/wicd/daemon.py -P/var/run/wicd.pid 2>/dev/null
+
+	touch /var/lock/subsys/wicd
+        echo
+}
+
+stop() 
+{
+        echo -n $"Shutting down wicd: "
+	killproc daemon.py
+
+	rm -f  /var/lock/subsys/wicd
+        echo
+}
+
+[ -x /opt/wicd/daemon.py ] || exit 0
+
+# See how we were called.
+case "$1" in
+  start)
+	start
+        ;;
+  stop)
+	stop
+        ;;
+  restart|reload)
+	stop
+	start
+	;;
+  condrestart)
+	[ -e /var/lock/subsys/wicd ] && (stop; start)
+	;;
+  status)
+  	status daemon.py
+	;;
+  *)
+        echo $"Usage: $0 {start|stop|restart|reload|condrestart}"
+        exit 1
+esac
+
+exit 0
diff -uNr wicd_1.4.2-orig/opt/wicd/daemon.py wicd_1.4.2/opt/wicd/daemon.py
--- wicd_1.4.2-orig/opt/wicd/daemon.py	2008-02-11 20:18:48.000000000 -0500
+++ wicd_1.4.2/opt/wicd/daemon.py	2008-07-06 14:33:43.000000000 -0400
@@ -55,12 +55,12 @@
 
 class FlushWriter:
     def __init__(self):
-        print os.getcwd()
         # make the file readable by root only
-        open('data/wicd.log','w')
-        os.chown('data/wicd.log', 0, 0)
+        open('/var/log/wicd.log','w')
+        os.chown('/var/log/wicd.log', 0, 0)
         #reopen the file, this time using it
-        self.file = open('data/wicd.log','w')
+        if not PIDFile: print os.getcwd()
+        self.file = open('/var/log/wicd.log','w')
         self.file.write(self.__getPrettyTime() + ' :: ')
 
     def write(self,data):
@@ -132,8 +132,8 @@
 
         DoAutoConnect = True
 
-        if len(sys.argv) > 1:
-            if sys.argv[1] == "--do-not-scan":
+        for opt in sys.argv[1:]:
+            if opt == "--do-not-scan":
                 print "--do-not-scan detected, not autoconnecting..."
                 DoAutoConnect = False
 
@@ -1196,6 +1196,11 @@
 ## borrowed from http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012
 
 if True: #for easy disabling
+    for opt in sys.argv[1:]:
+        if opt.startswith('-P'):
+            PIDFile = opt[2:]
+            break
+        else:    PIDFile = None
     try:
         pid = os.fork()
         if pid > 0:
@@ -1215,6 +1220,10 @@
         pid = os.fork()
         if pid > 0:
             print "wicd daemon: pid " + str(pid)
+            if PIDFile:
+                print >>open(PIDFile,'wt'),str(pid)
+            else:
+                print "wicd daemon: pid " + str(pid)
             sys.exit(0)
     except OSError, e:
         print >>sys.stderr, "fork #2 failed: %d (%s)" % (e.errno, e.strerror)
